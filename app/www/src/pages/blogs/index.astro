---
import { Image } from "astro:assets";
import { intlFormat } from "date-fns";
import { getBlogs } from "microcms/query/blogs";
import { css } from "pandacss/css";
import { isFailure } from "result";

import BaseLayout from "~/component/layout/BaseLayout.astro";
import { microCMS } from "~/config/microcms";

const blogsResponse = await getBlogs(microCMS(), [
  "id",
  "eyecatch",
  "title",
  "publishedAt",
  "status",
]);

if (isFailure(blogsResponse)) {
  throw blogsResponse.cause;
}

const blogs = await Promise.all(
  blogsResponse.value.contents.filter((v) => v.status[0] === "公開"),
);
---

<BaseLayout title="blogs">
  <div
    class={css({
      maxWidth: "80rem",
      marginX: "auto",
      paddingX: 0,
      display: "flex",
      flexDirection: "column",
      justifyContent: "center",
      alignItems: "center",
    })}
  >
    {
      blogs.map((v) => (
        <a
          href={`/blogs/${v.id}`}
          class={css({
            width: "100%",
            display: "grid",
            gridTemplateColumns: "auto auto",
            gridTemplateRows: "auto auto",
            gridTemplateAreas: '"image image" "title publishAt"',
            placeItems: "center",
          })}
        >
          <Image
            src={v.eyecatch.url}
            height={v.eyecatch.width ?? 1280}
            width={v.eyecatch.height ?? 720}
            alt=""
            class={css({
              maxWidth: "40rem",
              maxHeight: "30rem",
              objectFit: "contain",
              width: v.eyecatch.width,
              height: v.eyecatch.height,
              gridArea: "image",
            })}
          />
          <div class={css({ gridArea: "title" })}>{v.title}</div>
          <div class={css({ gridArea: "publishAt" })}>
            {intlFormat(
              new Date(v.publishedAt ?? ""),
              {
                timeZone: "Asia/Tokyo",
                year: "numeric",
                month: "numeric",
                day: "numeric",
                hour: "numeric",
                minute: "numeric",
              },
              { locale: "ja" },
            )}
          </div>
        </a>
      ))
    }
  </div>
</BaseLayout>
