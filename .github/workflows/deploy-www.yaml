name: publish www
on:
  workflow_dispatch:
  merge_group:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  VOLTA_FEATURE_PNPM: 1

jobs:
  publish-www-production:
    if: github.ref_name == 'main'
    name: publish www production
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    timeout-minutes: 10
    environment:
      name: "www production"
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup turborepo
        uses: ./.github/actions/setup-turborepo
      - name: publish-pages
        uses: ./.github/actions/publish-pages
        with:
          project-name: www
          dist: ./app/www/dist
          build: pnpm build --filter www
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        env:
          DATA_CF_BEACON_TOKEN_ID: ${{ secrets.DATA_CF_BEACON_TOKEN_ID }}

  publish-www-staging:
    if: github.ref_name != 'main'
    name: publish www staging
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    timeout-minutes: 10
    environment:
      name: "www staging"
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup turborepo
        uses: ./.github/actions/setup-turborepo
      - name: publish-pages
        uses: ./.github/actions/publish-pages
        with:
          project-name: www
          dist: ./app/www/dist
          build: pnpm build --filter www
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
